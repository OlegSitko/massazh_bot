import re
from telegram import (
    Update,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
    KeyboardButton
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters
)
from config import ADMIN_ID
from records import save_records

NAME, PHONE, TIME = range(3)
# –ò–º—è
async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["state"] = NAME
    context.user_data['name'] = update.message.text.strip()
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

# –¢–µ–ª–µ—Ñ–æ–Ω —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["state"] = PHONE
    phone = update.message.text.strip()
    if not re.fullmatch(r"\+?\d{10,15}", phone):
        await update.message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä.")
        return PHONE

    context.user_data['phone'] = phone
    keyboard = [
        ["–°–µ–≥–æ–¥–Ω—è –≤ 16:00", "–°–µ–≥–æ–¥–Ω—è –≤ 18:00"],
        ["–ó–∞–≤—Ç—Ä–∞ –≤ 12:00", "–ó–∞–≤—Ç—Ä–∞ –≤ 15:00"],
        ["–û—Ç–º–µ–Ω–∏—Ç—å"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë:", reply_markup=reply_markup)
    return TIME

# –í—Ä–µ–º—è + –æ—Ç–ø—Ä–∞–≤–∫–∞ + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
async def get_time(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data["state"] = TIME
    chosen_time = update.message.text.strip()
    context.user_data['time'] = chosen_time
    name = context.user_data['name']
    phone = context.user_data['phone']
    user_id = update.message.from_user.id
    username = update.message.from_user.username
    username_display = f"@{username}" if username else "üö´ –Ω–µ—Ç username"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–Ω—è—Ç–æ –ª–∏ –≤—Ä–µ–º—è –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    all_records = context.application.bot_data.get("records", {})
    for uid, rec_list in all_records.items():
        if uid != user_id:
            for record in rec_list:
                if record["time"] == chosen_time:
                    await update.message.reply_text(
                        f"‚ùå –í—Ä–µ–º—è {chosen_time} —É–∂–µ –∑–∞–Ω—è—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ."
                    )
                    return TIME  # –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É
    context.application.bot_data.setdefault("records", {})
    context.application.bot_data["records"].setdefault(user_id, []).append({
        "name": name,
        "phone": phone,
        "time": chosen_time
    })
     # üß† –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
    save_records(context.application.bot_data["records"])
    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    keyboard = [
        [KeyboardButton("–ú–æ–∏ –ó–∞–ø–∏—Å–∏")],
        [KeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ, {name}!\n"
        f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞:\nüìû {phone}\nüïí {chosen_time}",
        reply_markup=reply_markup
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
    admin_id = ADMIN_ID
    await context.bot.send_message(
        chat_id=admin_id,
        text=(
            f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
            f"üë§ –ò–º—è: {name}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
            f"üïí –í—Ä–µ–º—è: {chosen_time}\n"
            f"üÜî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username_display}"
        )
    )

    return ConversationHandler.END